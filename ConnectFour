import java.util.Scanner;

public class ConnectFour {
    private static final int ROWS = 6;
    private static final int COLUMNS = 7;
    private static final char EMPTY = '-';
    private static final char PLAYER1 = 'X';
    private static final char PLAYER2 = 'O';
    
    private char[][] board;
    private boolean player1Turn;

    public ConnectFour() {
        board = new char[ROWS][COLUMNS];
        for (int i = 0; i < ROWS; i++) {
            for (int j = 0; j < COLUMNS; j++) {
                board[i][j] = EMPTY;
            }
        }
        player1Turn = true;
    }

    public void playGame() {
        Scanner scanner = new Scanner(System.in);
        boolean gameOver = false;
        
        while (!gameOver) {
            // Print the board
            printBoard();
            
            // Get the player's move
            int column = getPlayerMove(scanner);
            
            // Make the move
            int row = dropPiece(column);
            
            // Check for win
            if (checkWin(row, column)) {
                printBoard();
                if (player1Turn) {
                    System.out.println("Player 1 wins!");
                } else {
                    System.out.println("Player 2 wins!");
                }
                gameOver = true;
            } else if (checkDraw()) { // Check for draw
                printBoard();
                System.out.println("It's a draw!");
                gameOver = true;
            }
            
            // Switch player
            player1Turn = !player1Turn;
        }
        scanner.close();
    }

    private void printBoard() {
        for (int i = ROWS - 1; i >= 0; i--) {
            for (int j = 0; j < COLUMNS; j++) {
                System.out.print(board[i][j] + " ");
            }
            System.out.println();
        }
        for (int i = 1; i <= COLUMNS; i++) {
            System.out.print(i + " ");
        }
        System.out.println();
    }

    private int getPlayerMove(Scanner scanner) {
        int column;
        do {
            System.out.print("Player " + (player1Turn ? "1" : "2") + ", enter your column (1-" + COLUMNS + "): ");
            column = scanner.nextInt();
        } while (column < 1 || column > COLUMNS || board[ROWS - 1][column - 1] != EMPTY);
        return column - 1;
    }

    private int dropPiece(int column) {
        int row = 0;
        while (row < ROWS && board[row][column] == EMPTY) {
            row++;
        }
        board[row - 1][column] = player1Turn ? PLAYER1 : PLAYER2;
        return row - 1;
    }

    private boolean checkWin(int row, int column) {
        char player = board[row][column];
        // Check horizontally
        int count = 0;
        for (int i = 0; i < COLUMNS; i++) {
            if (board[row][i] == player) {
                count++;
                if (count == 4) return true;
            } else {
                count = 0;
            }
        }
        // Check vertically
        count = 0;
        for (int i = 0; i < ROWS; i++) {
            if (board[i][column] == player) {
                count++;
                if (count == 4) return true;
            } else {
                count = 0;
            }
        }
        // Check diagonally
        count = 0;
        int startRow = Math.max(0, row - 3);
        int startColumn = Math.max(0, column - 3);
        int endRow = Math.min(ROWS - 1, row + 3);
        int endColumn = Math.min(COLUMNS - 1, column + 3);
        for (int i = startRow, j = startColumn; i <= endRow && j <= endColumn; i++, j++) {
            if (board[i][j] == player) {
                count++;
                if (count == 4) return true;
            } else {
                count = 0;
            }
        }
        // Check anti-diagonally
        count = 0;
        startRow = Math.min(ROWS - 1, row + 3);
        startColumn = Math.max(0, column - 3);
        endRow = Math.max(0, row - 3);
        endColumn = Math.min(COLUMNS - 1, column + 3);
        for (int i = startRow, j = startColumn; i >= endRow && j <= endColumn; i--, j++) {
            if (board[i][j] == player) {
                count++;
                if (count == 4) return true;
            } else {
                count = 0;
            }
        }
        return false;
    }

    private boolean checkDraw() {
        for (int i = 0; i < COLUMNS; i++) {
            if (board[ROWS - 1][i] == EMPTY) {
                return false;
            }
        }
        return true;
    }

    public static void main(String[] args) {
        ConnectFour game = new ConnectFour();
        game.playGame();
    }
}
